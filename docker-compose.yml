version: '3.2'

networks:
  dw-network:
    driver: bridge

services:

  dw-nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
      args:
        TZ: ${DOCKER_TIMEZONE}
    container_name: dw-nginx
    restart: always
    ports:
      - "${NGINX_PORT_SSL}:443"
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/snippets:/etc/nginx/snippets
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/logs:/var/log/nginx
      - ${DOCKER_WWW_DIR:-./projects}:/var/www
    depends_on:
      - dw-php-5.6
#      - dw-php-7.4
#      - dw-php-8.0
#      - dw-php-8.1
      - dw-php-8.2
      - dw-node-14
    environment:
      TZ: ${DOCKER_TIMEZONE}
    networks:
      - dw-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  dw-mysql-5.x:
    image: mysql:5
    command: --default-authentication-plugin=mysql_native_password --skip_name_resolve
    container_name: dw-mysql-5.x
    restart: always
    volumes:
      - ./mysql-5.x/conf.d:/etc/mysql/conf.d
      - ./mysql-5.x/data:/var/lib/mysql
      - ./mysql-5.x/logs:/var/log/mysql
      - ./mysql-5.x/dump:/dump
    ports:
      - "${MYSQL_5_X_PORT}:3306"
    security_opt:
      - seccomp:unconfined
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_5_X_ROOT_PASS}
      MYSQL_USER: ${MYSQL_5_X_USER}
      MYSQL_PASSWORD: ${MYSQL_5_X_PASS}
      TZ: ${DOCKER_TIMEZONE}
    networks:
      - dw-network

  dw-mysql-8.x:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password --skip_name_resolve
    container_name: dw-mysql-8.x
    restart: always
    volumes:
      - ./mysql-8.x/conf.d:/etc/mysql/conf.d
      - ./mysql-8.x/data:/var/lib/mysql
      - ./mysql-8.x/logs:/var/log/mysql
      - ./mysql-8.x/dump:/dump
    ports:
      - "${MYSQL_8_X_PORT}:3306"
    security_opt:
      - seccomp:unconfined
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_8_X_ROOT_PASS}
      MYSQL_USER: ${MYSQL_8_X_USER}
      MYSQL_PASSWORD: ${MYSQL_8_X_PASS}
      TZ: ${DOCKER_TIMEZONE}
    networks:
      - dw-network

  dw-postgres:
    image: postgres:alpine
    container_name: dw-postgres
    restart: always
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/dump:/dump
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      TZ: ${DOCKER_TIMEZONE}
    networks:
      - dw-network

  dw-mongo-4.x:
    image: mongo:4
    user: ${DOCKER_UID}:${DOCKER_GID} #<-- here must be UID:GID of current host user
    container_name: dw-mongo-4.x
    restart: always
    ports:
      - "${MONGO_4_X_PORT}:27017"
    volumes:
      - ./mongo-4.x/data:/data/db
      - ./mongo-4.x/conf:/data/configdb
      - ./mongo-4.x/dump:/dump
    environment:
      TZ: ${DOCKER_TIMEZONE}
    networks:
      - dw-network

  dw-mongo-5.x:
    image: mongo:5
    user: ${DOCKER_UID}:${DOCKER_GID} #<-- here must be UID:GID of current host user
    container_name: dw-mongo-5.x
    restart: always
    ports:
      - "${MONGO_5_X_PORT}:27017"
    volumes:
      - ./mongo-5.x/data:/data/db
      - ./mongo-5.x/conf:/data/configdb
      - ./mongo-5.x/dump:/dump
    environment:
      TZ: ${DOCKER_TIMEZONE}
    networks:
      - dw-network

  dw-mongo-6.x:
    image: mongo:6
    user: ${DOCKER_UID}:${DOCKER_GID} #<-- here must be UID:GID of current host user
    container_name: dw-mongo-6.x
    restart: always
    ports:
      - "${MONGO_6_X_PORT}:27017"
    volumes:
      - ./mongo-6.x/data:/data/db
      - ./mongo-6.x/conf:/data/configdb
      - ./mongo-6.x/dump:/dump
    environment:
      TZ: ${DOCKER_TIMEZONE}
    networks:
      - dw-network

  dw-redis:
    image: redis:latest
    container_name: dw-redis
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/data:/var/lib/redis
    environment:
      TZ: ${DOCKER_TIMEZONE}
    networks:
      - dw-network

  dw-rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: dw-rabbitmq
    restart: always
    ports:
      - "${RABBITMQ_CLIENT_PORT}:5672"
      - "${RABBITMQ_MANAGE_PORT}:15672"
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      TZ: ${DOCKER_TIMEZONE}
    networks:
      - dw-network

  dw-php-5.6:
    build:
      context: php-5.6
      dockerfile: Dockerfile
#      args:
#        TZ: ${DOCKER_TIMEZONE}
    user: ${DOCKER_UID}:${DOCKER_GID} #<-- here must be UID:GID of current host user
    working_dir: /var/www
    container_name: dw-php-5.6
    restart: always
    privileged: true
    volumes:
      - ./php-5.6/php.ini:/usr/local/etc/php/php.ini
      - ${DOCKER_WWW_DIR:-./projects}:/var/www
    ports:
      - "${PHP_5_6_PORT}:9000"
    networks:
      - dw-network

  dw-php-7.4:
    build:
      context: php-7.4
      dockerfile: Dockerfile
      args:
        PHP_7_4_ENABLE_XDEBUG: ${PHP_7_4_ENABLE_XDEBUG}
        TZ: ${DOCKER_TIMEZONE}
    user: ${DOCKER_UID}:${DOCKER_GID} #<-- here must be UID:GID of current host user
    working_dir: /var/www
    container_name: dw-php-7.4
    restart: always
    privileged: true
    volumes:
      - ./.config:/.config
      - ./.ssh:/home/www-data/.ssh
      - ./php-7.4/php.ini:/usr/local/etc/php/php.ini
      - ./php-7.4/supervisor.d:/etc/supervisor.d
      - ${DOCKER_WWW_DIR:-./projects}:/var/www
    ports:
      - "${PHP_7_4_PORT}:9000"
    networks:
      - dw-network

  dw-php-8.0:
    build:
      context: php-8.0
      dockerfile: Dockerfile
      args:
        PHP_8_0_ENABLE_XDEBUG: ${PHP_8_0_ENABLE_XDEBUG}
        TZ: ${DOCKER_TIMEZONE}
    user: ${DOCKER_UID}:${DOCKER_GID} #<-- here must be UID:GID of current host user
    working_dir: /var/www
    container_name: dw-php-8.0
    restart: always
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./php-8.0/php.ini:/usr/local/etc/php/php.ini
      - ./php-8.0/supervisor.d:/etc/supervisor.d
      - ${DOCKER_WWW_DIR:-./projects}:/var/www
    ports:
      - "${PHP_8_0_PORT}:9000"
    networks:
      - dw-network

  dw-php-8.1:
    build:
      context: php-8.1
      dockerfile: Dockerfile
      args:
        PHP_8_1_ENABLE_XDEBUG: ${PHP_8_1_ENABLE_XDEBUG}
        TZ: ${DOCKER_TIMEZONE}
    user: ${DOCKER_UID}:${DOCKER_GID} #<-- here must be UID:GID of current host user
    working_dir: /var/www
    container_name: dw-php-8.1
    restart: always
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./php-8.1/php.ini:/usr/local/etc/php/php.ini
      - ./php-8.1/supervisor.d:/etc/supervisor.d
      - ${DOCKER_WWW_DIR:-./projects}:/var/www
    ports:
      - "${PHP_8_1_PORT}:9000"
    networks:
      - dw-network

  dw-php-8.2:
    build:
      context: php-8.2
      dockerfile: Dockerfile
      args:
        PHP_8_2_ENABLE_XDEBUG: ${PHP_8_2_ENABLE_XDEBUG}
        TZ: ${DOCKER_TIMEZONE}
    user: ${DOCKER_UID}:${DOCKER_GID} #<-- here must be UID:GID of current host user
    working_dir: /var/www
    container_name: dw-php-8.2
    restart: always
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./php-8.2/php.ini:/usr/local/etc/php/php.ini
      - ./php-8.2/supervisor.d:/etc/supervisor.d
      - ${DOCKER_WWW_DIR:-./projects}:/var/www
    ports:
      - "${PHP_8_2_PORT}:9000"
      - "8000:8000"
    networks:
      - dw-network
    extra_hosts:
      - "aaron-velocity.local.dev:host-gateway"

  dw-node-14:
    build:
      context: node-14
      dockerfile: Dockerfile
      args:
        TZ: ${DOCKER_TIMEZONE}
    user: ${DOCKER_UID}:${DOCKER_GID} #<-- here must be UID:GID of current host user
    working_dir: /var/www
    container_name: dw-node-14
    restart: always
    volumes:
      - ./node-14/conf.d:/home/node/conf.d
      - ./node-14/pm2.config.js:/home/node/pm2.config.js
      - ./node-14/pm2.example.js:/home/node/pm2.example.js
      - ${DOCKER_WWW_DIR:-./projects}:/var/www
    ports:
      - "3900-3999:3900-3999"
    networks:
      - dw-network
